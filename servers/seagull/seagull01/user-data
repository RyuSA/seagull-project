#cloud-config

# This is the user-data configuration file for cloud-init. By default this sets
# up an initial user called "ubuntu" with password "ubuntu", which must be
# changed at first login. However, many additional actions can be initiated on
# first boot from this file. The cloud-init documentation has more details:
#
# https://cloudinit.readthedocs.io/
#
# Some additional examples are provided in comments below the default
# configuration.

# hostname
hostname: seagull01

# Japan
timezone: "Asia/Tokyo"

# Never allow to ssh using password
ssh_pwauth: false
# User "captain"
users:
  - name: captain
    gecos: I am captain
    primary_group: captain
    groups: [adm, audio, cdrom, dialout, dip, floppy, lxd, netdev, plugdev, sudo, video]
    shell: /bin/bash
    sudo: ALL=(ALL) NOPASSWD:ALL
    lock_passwd: true
    ssh_import_id:
      - gh:RyuSA

# Update packages
package_update: true
package_upgrade: true
packages:
  - apt-transport-https
  - ca-certificates
  - curl
  - gnupg
  - lsb-release
  - nfs-common # for nfs client
  - iptables
  - arptables
  - ebtables
  - lvm2

mounts:
  - [ tmpfs, /tmp, tmpfs, "defaults,size=256m", "0", "0" ]
  - [ tmpfs, /var/tmp, tmpfs, "defaults,size=256m", "0", "0" ]
  - [ tmpfs, /var/log, tmpfs, "defaults,size=256m", "0", "0" ]

write_files:
  # iptablesがブリッジを通過するトラフィックを処理できるようにする 
  - content: |
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables = 1
    owner: root:root
    path: /etc/sysctl.d/k8s.conf
    permissions: '0644'
  # containerdに必要な設定
  - content: |
      overlay
      br_netfilter
    owner: root:root
    path: /etc/modules-load.d/containerd.conf
    permissions: '0644'
  # 必要なカーネルパラメータ
  - content: |
      net.bridge.bridge-nf-call-iptables  = 1
      net.ipv4.ip_forward                 = 1
      net.bridge.bridge-nf-call-ip6tables = 1
    owner: root:root
    path: /etc/sysctl.d/99-kubernetes-cri.conf
    permissions: '0644'

runcmd:
  - sudo swapoff -a
  - sudo sysctl --system
  # use regacy firewall
  - sudo update-alternatives --set iptables /usr/sbin/iptables-legacy
  - sudo update-alternatives --set ip6tables /usr/sbin/ip6tables-legacy
  - sudo update-alternatives --set arptables /usr/sbin/arptables-legacy
  - sudo update-alternatives --set ebtables /usr/sbin/ebtables-legacy
  # install containerd
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
  - echo "deb [arch=arm64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
  - sudo apt-get update
  - sudo apt-get install containerd.io
  - sudo mkdir -p /etc/containerd
  - containerd config default | sed -e '/containerd.runtimes.runc.options/a \ \ \ \ \ \ \ \ \ \ \  SystemdCgroup = true' | sudo tee /etc/containerd/config.toml
  - sudo systemctl restart containerd
  # install kubeadm
  - sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
  - echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
  - sudo apt-get update
  - sudo apt-get install -y kubelet kubeadm kubectl
  - sudo apt-mark hold kubelet kubeadm kubectl containerd.io
